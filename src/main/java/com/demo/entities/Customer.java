package com.demo.entities;
// Generated Mar 20, 2024, 12:49:52â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.*;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer")
public class Customer implements java.io.Serializable {

	private Integer id;
	private String name;
	private Date date;
	private String phone;
	private String address;
	private String email;
	private Set<Output> outputs = new HashSet<Output>(0);

	public Customer() {
	}

	public Customer(String name, Date date, String phone, String address, String email) {
		this.name = name;
		this.date = date;
		this.phone = phone;
		this.address = address;
		this.email = email;
	}

	public Customer(String name, Date date, String phone, String address, String email, Set<Output> outputs) {
		this.name = name;
		this.date = date;
		this.phone = phone;
		this.address = address;
		this.email = email;
		this.outputs = outputs;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "phone", nullable = false)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "address", nullable = false, length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Output> getOutputs() {
		return this.outputs;
	}

	public void setOutputs(Set<Output> outputs) {
		this.outputs = outputs;
	}

}
